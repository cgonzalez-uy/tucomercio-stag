rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSuperAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'cgonzalez.uy@gmail.com' || 
         request.auth.token.email == 'sole.emery@gmail.com');
    }

    function isBusinessUser(businessId) {
      return request.auth != null && 
        request.auth.token.businessId == businessId;
    }

    // Payment accounts - allow public read access, admin write access
    match /payment_accounts/{accountId} {
      allow read: if request.auth != null;
      allow write: if isSuperAdmin();
    }

    // Bus management collections - allow public read access
    match /bus_lines/{lineId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /bus_line_types/{typeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /bus_destinations/{destinationId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /bus_routes/{routeId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    match /bus_schedules/{scheduleId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Points of Interest - allow public read access
    match /points_of_interest/{poiId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Events - allow public read access, admin write access
    match /events/{eventId} {
      allow read: if true;
      allow create, delete: if isSuperAdmin();
      allow update: if isSuperAdmin() || (
        request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['registeredUsers']) &&
        (
          // Adding user to registeredUsers
          request.resource.data.registeredUsers.hasAll(resource.data.registeredUsers) &&
          request.resource.data.registeredUsers.removeAll(resource.data.registeredUsers).hasOnly([request.auth.uid]) ||
          // Removing user from registeredUsers
          resource.data.registeredUsers.hasAll(request.resource.data.registeredUsers) &&
          resource.data.registeredUsers.removeAll(request.resource.data.registeredUsers).hasOnly([request.auth.uid])
        )
      );
    }

    // Saved schedules - require authentication
    match /saved_schedules/{scheduleId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && (
        isSuperAdmin() ||
        request.auth.uid == resource.data.recipientId ||
        (isBusinessUser(resource.data.businessId) && 
         resource.data.recipientId == resource.data.businessId)
      );
      
      allow create: if request.auth != null;

      allow update: if request.auth != null && (
        isSuperAdmin() ||
        (request.auth.uid == resource.data.recipientId && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read'])) ||
        (isBusinessUser(resource.data.businessId) && 
         resource.data.recipientId == resource.data.businessId)
      );

      allow delete: if isSuperAdmin();
    }

    // Businesses
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if isSuperAdmin() || isBusinessUser(businessId);
      allow delete: if isSuperAdmin();
    }

    // Users
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && (request.auth.uid == userId || isSuperAdmin());
      allow delete: if isSuperAdmin();
    }

    // Business metrics
    match /business_metrics/{businessId} {
      allow read: if isBusinessUser(businessId) || isSuperAdmin();
      allow create, update: if true;
    }

    // Site settings
    match /site-settings/{settingId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Plans
    match /plans/{planId} {
      allow read: if true;
      allow write: if isSuperAdmin();
    }

    // Promotions
    match /promotions/{promotionId} {
      allow read: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(resource.data.businessId)
      );
      allow create: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(request.resource.data.businessId)
      );
      allow update, delete: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(resource.data.businessId)
      );
    }

    // Coupons
    match /coupons/{couponId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(request.resource.data.businessId)
      );
      allow update, delete: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(resource.data.businessId)
      );
    }

    // Used coupons
    match /used_coupons/{usedCouponId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      
      allow update, delete: if false;
    }

    // Chats
    match /chats/{chatId} {
      allow read: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(resource.data.businessId)
      );
      allow create: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(request.resource.data.businessId)
      );
      allow update: if request.auth != null && (
        isSuperAdmin() || 
        isBusinessUser(resource.data.businessId)
      );
      allow delete: if isSuperAdmin();

      match /messages/{messageId} {
        allow read: if request.auth != null && (
          isSuperAdmin() || 
          isBusinessUser(get(/databases/$(database)/documents/chats/$(chatId)).data.businessId)
        );
        allow create: if request.auth != null && (
          isSuperAdmin() || 
          isBusinessUser(get(/databases/$(database)/documents/chats/$(chatId)).data.businessId)
        );
        allow update: if request.auth != null && (
          isSuperAdmin() || 
          isBusinessUser(get(/databases/$(database)/documents/chats/$(chatId)).data.businessId)
        );
        allow delete: if isSuperAdmin();
      }
    }
  }
}