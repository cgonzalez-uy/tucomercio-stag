rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isSuperAdmin() {
      return request.auth != null && 
        (request.auth.token.email == 'cgonzalez.uy@gmail.com' || 
         request.auth.token.email == 'sole.emery@gmail.com');
    }

    function isBusinessUser(businessId) {
      return request.auth != null && request.auth.token.businessId == businessId;
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*') 
        && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    function isValidDocument() {
      return (
        request.resource.contentType.matches('application/pdf') ||
        request.resource.contentType.matches('application/msword') ||
        request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.wordprocessingml.document') ||
        request.resource.contentType.matches('text/plain')
      ) && request.resource.size < 5 * 1024 * 1024; // 5MB max
    }

    // Rules for business images
    match /businesses/{businessId}/{imageType}/{imageId} {
      allow read: if request.auth != null;
      allow write: if (isSuperAdmin() || isBusinessUser(businessId)) 
        && isValidImage();
    }

    // Rules for user profile images
    match /users/{userId}/{imageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null 
        && request.auth.uid == userId 
        && isValidImage();
    }

    // Rules for chat attachments
    match /chats/{chatId}/files/{fileName} {
      allow read: if request.auth != null && (
        isSuperAdmin() ||
        exists(/databases/$(database)/documents/chats/$(chatId)/messages/*)
      );
      
      allow write: if request.auth != null && (
        isSuperAdmin() ||
        exists(/databases/$(database)/documents/chats/$(chatId)/messages/*)
      ) && (
        isValidImage() || isValidDocument()
      );
    }
  }
}